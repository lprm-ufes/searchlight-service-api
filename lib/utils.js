// Generated by CoffeeScript 1.9.2
(function() {
  var CLIENT_SIDE, Dicionario, getURLParameter, md5, parseFloatPTBR, string2function,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  if (typeof process.browser === 'undefined') {
    md5 = require('blueimp-md5').md5;
    CLIENT_SIDE = false;
  } else {
    CLIENT_SIDE = true;
    md5 = window.md5;
  }

  Dicionario = (function() {
    function Dicionario(js_hash) {
      this.get = bind(this.get, this);
      if (typeof js_hash === 'string') {
        js_hash = JSON.parse(js_hash);
      }
      this.keys = Object.keys(js_hash);
      this.data = js_hash;
    }

    Dicionario.prototype.get = function(key, value) {
      if (indexOf.call(this.keys, key) >= 0) {
        return this.data[key];
      } else {
        return value;
      }
    };

    return Dicionario;

  })();

  getURLParameter = function(name) {
    return $(document).getUrlParam(name);
  };

  string2function = function(func_code) {
    var m, nome, re;
    re = /.*function *(\w*) *\( *(\w*) *\) *\{/mg;
    if ((m = re.exec(func_code)) !== null) {
      if (m.index === re.lastIndex) {
        re.lastIndex++;
      }
      nome = m[1] || 'slsAnonymousFunction';
      if (CLIENT_SIDE) {
        return eval("window['" + nome + "']=" + func_code);
      } else {
        return eval("exports['" + nome + "']=" + func_code);
      }
    } else {
      return null;
    }
  };

  parseFloatPTBR = function(str) {
    var itens;
    itens = String(str).match(/^(-*\d+)([\,\.]*)(\d+)?$/);
    if (itens[2]) {
      return parseFloat(itens[1] + "." + itens[3]);
    } else {
      return parseFloat(itens[1]);
    }
  };

  if (CLIENT_SIDE) {
    window.parseFloatPTBR = parseFloatPTBR;
    window.string2function = string2function;
    window.getURLParameter = getURLParameter;
  }

  module.exports = {
    Dicionario: Dicionario,
    parseFloatPTBR: parseFloatPTBR,
    string2function: string2function,
    getURLParameter: getURLParameter,
    md5: md5
  };

}).call(this);
