// Generated by CoffeeScript 1.9.2
(function() {
  var DataPool, DataSource, DataSourceGoogle, createDataSource, events,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  events = require('./events');

  DataSource = require('./datasource').DataSource;

  DataSourceGoogle = require('./datasourceGoogle').DataSourceGoogle;

  createDataSource = function(url, functionCode) {
    if (url.indexOf("docs.google.com/spreadsheet") > -1) {
      return new DataSourceGoogle(url, functionCode);
    } else {
      return new DataSource(url, functionCode);
    }
  };

  DataPool = (function() {
    DataPool.instances = {};

    DataPool.getInstance = function(config) {
      return this.instances[config.id];
    };

    function DataPool(config) {
      this.loadAllData = bind(this.loadAllData, this);
      var dataSources, index, j, len, s;
      DataPool.instances[config.id] = this;
      this.config = config;
      this.dataSources = [];
      dataSources = this.config.dataSources;
      for (index = j = 0, len = dataSources.length; j < len; index = ++j) {
        s = dataSources[index];
        this.addDataSource(s);
      }
      events.on('slsapi:datasource:load', (function(_this) {
        return function(id) {
          if (id === config.id) {
            return _this.onDataSourceLoaded();
          }
        };
      })(this));
    }

    DataPool.prototype.addDataSource = function(s) {
      var source;
      source = createDataSource(s.url, s.func_code);
      if (source.isValid()) {
        return this.dataSources.push(source);
      }
    };

    DataPool.prototype.removeDataSource = function(i) {
      return this.dataSources.splice(i, 1);
    };

    DataPool.prototype.getDataSources = function() {
      return this.dataSources;
    };

    DataPool.prototype.updateFonte = function(url, func_code, index) {
      return this.dataSources[index] = createDataSource(url, func_code);
    };

    DataPool.prototype.getDataSource = function(i) {
      return this.dataSources[i];
    };

    DataPool.prototype.loadAllData = function(callerId) {
      var i, j, len, obj, ref, results, source;
      obj = this;
      this.sourcesLoaded = 0;
      events.trigger("dados:carregando", callerId);
      ref = this.dataSources;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        source = ref[i];
        results.push(source.loadData(this.config, false));
      }
      return results;
    };

    DataPool.prototype.toJSON = function() {
      var array, f, i, j, len, ref;
      array = [];
      ref = this.dataSources;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        f = ref[i];
        f.func_code = f.func_code.toString();
        array.push(f);
      }
      return array;
    };

    DataPool.prototype.onDataSourceLoaded = function() {
      this.sourcesLoaded += 1;
      if (this.sourcesLoaded === this.dataSources.length) {
        return events.trigger('dados:carregados', this.config.id);
      }
    };

    return DataPool;

  })();

  module.exports = {
    DataPool: DataPool
  };

}).call(this);
