// Generated by CoffeeScript 1.9.2
(function() {
  var Ajax, del, get, isRunningOnBrowser, post, request;

  isRunningOnBrowser = require('./utils').isRunningOnBrowser;

  request = require('superagent');

  if (!isRunningOnBrowser) {
    request = request.agent();
  }

  Ajax = (function() {
    function Ajax(options) {
      this.xhr = null;
      this.donecb = null;
      this.failcb = null;
      this.request = request;
      this.options = options;
    }

    Ajax.prototype.get = function(params) {
      this.xhr = this.request.get(params);
      if (isRunningOnBrowser) {
        this.xhr.withCredentials();
      }
      if (this.options && this.options.buffer) {
        this.xhr.buffer();
      }
      if (this.options && this.options.type) {
        this.xhr.type(this.options.type);
      }
      this.xhr.end((function(_this) {
        return function(err, res) {
          return _this.end(err, res);
        };
      })(this));
      return this;
    };

    Ajax.prototype.post = function(params) {
      if ("data" in params) {
        this.xhr = this.request.post(params['url']).send(params['data']);
      } else {
        this.xhr = this.request.post(params);
      }
      if (isRunningOnBrowser) {
        this.xhr.withCredentials();
      }
      this.xhr.end((function(_this) {
        return function(err, res) {
          return _this.end(err, res);
        };
      })(this));
      return this;
    };

    Ajax.prototype.end = function(err, res) {
      if (err) {
        return this.failcb(err);
      } else {
        return this.donecb(res);
      }
    };

    Ajax.prototype["delete"] = function(params) {
      this.xhr = this.request.del(params);
      if (isRunningOnBrowser) {
        this.xhr.withCredentials();
      }
      this.xhr.end((function(_this) {
        return function(err, res) {
          return _this.end(err, res);
        };
      })(this));
      return this;
    };

    Ajax.prototype.done = function(cb) {
      return this.donecb = cb;
    };

    Ajax.prototype.fail = function(cb) {
      return this.failcb = cb;
    };

    return Ajax;

  })();

  get = function(params, options) {
    return new Ajax(options).get(params);
  };

  post = function(params) {
    return new Ajax().post(params);
  };

  del = function(params) {
    return new Ajax()["delete"](params);
  };

  module.exports = {
    get: get,
    post: post,
    del: del,
    Ajax: Ajax
  };

}).call(this);
