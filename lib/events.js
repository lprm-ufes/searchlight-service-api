// Generated by CoffeeScript 1.10.0
(function() {
  var bind, emitter, emitters, events, isRunningOnBrowser, select, trigger, unbind;

  emitter = null;

  isRunningOnBrowser = require('./utils').isRunningOnBrowser;

  if (!isRunningOnBrowser) {
    events = require('events');
    emitters = {};
    select = function(id) {
      if (!(id in emitters)) {
        emitters[id] = new events.EventEmitter();
      }
      return emitters[id];
    };
    trigger = function(id, event, param) {
      return select(id).emit(event, param);
    };
    bind = function(id, event, cb) {
      var cb2;
      cb2 = function(caller, params) {
        return cb(caller, params);
      };
      return select(id).on(event, cb2);
    };
    unbind = function(id, event, cb) {
      if (cb) {
        return select(id).removeListener(event, cb);
      } else {
        return select(id).removeAllListeners(event);
      }
    };
  } else {
    select = function(id) {
      var target;
      target = $("#slEvent" + id);
      if (target.length <= 0) {
        target = $("<div id='slEvent" + id + "'> </div>");
        $("body").append(target);
      }
      return target;
    };
    trigger = function(id, event, param) {
      return select(id).trigger(event, param);
    };
    bind = function(id, event, cb) {
      var f;
      f = function(caller, params) {
        return cb(params);
      };
      return select(id).on(event, f);
    };
    unbind = function(id, event, cb) {
      return select(id).off(event);
    };
  }

  module.exports = {
    trigger: trigger,
    on: bind,
    off: unbind
  };

}).call(this);
